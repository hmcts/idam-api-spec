openapi: 3.0.0
info:
  title: SIDAM OpenID Connect 1.0 Endpoints
  description: Endpoints defined in the OIDC/OAuth2 Specification
  version: 1.0.0
tags:
  - name: OpenID Connect
paths:
  /authenticate:
    post:
      summary: Authenticate Username and Password
      operationId: _authenticate
      description: >
        On success, it returns a cookie reference to either a new or existing
        session. If MFA is required,

        it will initiate the OTP flow, returning AuthId cookie allowing flow completion instead.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  description: The user's username
                  type: string
                password:
                  description: The user's password
                  type: string
                redirectUri:
                  description: The redirectUri parameter to run against policies to work
                    out if OTP is required
                  type: string
                originIp:
                  description: The original IP address of the auth request (user)
                  type: string
      responses:
        "200":
          headers:
            Set-Cookie:
              description: >
                A Set-Cookie instruction containing the cookie referencing the
                users

                newly created or pre-existing session, or AuthId cookie to continue the flow with OTP.
              schema:
                type: string
          description: Authentication is successful, or waiting for another call with OTP.
        "401":
          description: Username password combination not found
  /authenticate?service=otpe:
    post:
      summary: Finishes User Authentication using OTP
      operationId: _authenticate_otp
      description: Finishes an authentication flow by supplying an OTP for MFA.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                otp:
                  description: The one-time password sent to complete the OTP flow
                  type: string
                authId:
                  description: A reference to an already existing authentication flow
                    requiring MFA.
                  type: string
              required:
                - otp
                - authId
      responses:
        "200":
          headers:
            Set-Cookie:
              description: >
                A Set-Cookie instruction containing the cookie referencing the
                users

                newly created or pre-existing session.
              schema:
                type: string
          description: Authentication is successful.
        "400":
          description: Incorrect OTP
        "401":
          description: User not authorised
  /authorize:
    get:
      summary: Browser OpenID Connect Authorize
      operationId: _oauth2_authorize
      description: Initiate an OpenID Connect Authorization flow
      parameters:
        - name: client_id
          in: query
          required: false
          description: OAuth2 client id of the service initiating the OAuth2 flow.
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: false
          description: >
            URI to redirect the user to after successful authentication. This
            URL

            must match one of the registered URLs for the OAuth2 application linked to the service

            initiating the authentication flow.
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Optional state to be sent back to the initiating service after
            successful authentication.
          schema:
            type: string
        - name: nonce
          in: query
          required: false
          description: Optional parameter required for openid hybrid flow requests.
          schema:
            type: string
        - name: response_type
          in: query
          required: false
          description: Response type to use for this request
          schema:
            type: string
            default: code
        - name: scope
          in: query
          required: false
          description: Optional scopes to request.
          schema:
            type: string
        - name: response_mode
          in: query
          required: false
          description: >
            Informs Authorization server of the mechanism to be used for
            returning parameters.

            Use is not recommended.
          schema:
            type: string
        - name: display
          in: query
          required: false
          description: >
            ASCII string value that specifies how the Authorization Server

            displays the authentication and consent user interface pages to the End-User.
          schema:
            type: string
        - name: prompt
          in: query
          required: false
          description: >
            Space delimited, case sensitive list of ASCII string values that
            specifies whether

            the Authorization Server prompts the End-User for reauthentication and consent.
          schema:
            type: string
        - name: max_age
          in: query
          required: false
          description: Maximum Authentication Age
          schema:
            type: string
        - name: acr_values
          in: query
          required: false
          description: Requested Authentication Context Class Reference values
          schema:
            type: string
        - name: id_token_hint
          in: query
          required: false
          description: >
            Token previously issued by the Authorization Server being passed as
            a hint about

            the End-User's current or past authenticated session with the Client.
          schema:
            type: string
        - name: login_hint
          in: query
          required: false
          description: >
            Hint to the Authorization Server about the login identifier the
            End-User might use to

            log in (if necessary). This hint can be used by an RP if it first asks the End-User for

            their e-mail address (or other identifier) and then wants to pass that value as a hint

            to the discovered authorization service.
          schema:
            type: string
        - name: code_challenge
          in: query
          required: false
          description: >
            Used in PKCE extension to Authorization Code flow. A base64 URL
            encoded string derived from

            the code verifier using one of the allowed transformation methods.
          schema:
            type: string
        - name: code_challenge_method
          in: query
          required: false
          description: >
            Used in PKCE extension to Authorization Code flow. Transformation
            method used to derive code

            challenge from the code verifier. The value can only be either 'S256' or 'plain'.
          schema:
            type: string
      responses:
        "302":
          headers:
            Location:
              description: |
                The URL that the Resource Owner must be redirected to.
                This will be the login page or an error page if a parameter
                was omitted or incorrect
              schema:
                type: string
          description: Redirection to login page successful.
        "400":
          description: Request is invalid. One or more required parameters may have been
            omitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: client_id not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - OpenID Connect
    post:
      summary: Direct Post OpenID Connect Authorize
      operationId: _oauth2_authorize_post
      description: Initiate an OpenID Connect Authorization flow
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  description: OAuth2 client id of the service initiating the OAuth2 flow.
                  type: string
                redirect_uri:
                  description: >
                    URI to redirect the user to after successful authentication.
                    This URL

                    must match one of the registered URLs for the OAuth2 application linked to the service

                    initiating the authentication flow.
                  type: string
                state:
                  description: Optional state to be sent back to the initiating service
                    after successful authentication.
                  type: string
                nonce:
                  description: Optional parameter required for openid hybrid flow requests.
                  type: string
                response_type:
                  description: Response type to use for this request
                  type: string
                  default: code
                scope:
                  description: Optional scopes to request.
                  type: string
                response_mode:
                  description: >
                    Informs Authorization server of the mechanism to be used for
                    returning parameters.

                    Use is not recommended.
                  type: string
                display:
                  description: >
                    ASCII string value that specifies how the Authorization
                    Server

                    displays the authentication and consent user interface pages to the End-User.
                  type: string
                prompt:
                  description: >
                    Space delimited, case sensitive list of ASCII string values
                    that specifies whether

                    the Authorization Server prompts the End-User for reauthentication and consent.
                  type: string
                max_age:
                  description: Maximum Authentication Age
                  type: string
                acr_values:
                  description: Requested Authentication Context Class Reference values
                  type: string
                id_token_hint:
                  description: >
                    Token previously issued by the Authorization Server being
                    passed as a hint about

                    the End-User's current or past authenticated session with the Client.
                  type: string
                login_hint:
                  description: >
                    Hint to the Authorization Server about the login identifier
                    the End-User might use to

                    log in (if necessary). This hint can be used by an RP if it first asks the End-User for

                    their e-mail address (or other identifier) and then wants to pass that value as a hint

                    to the discovered authorization service.
                  type: string
                code_challenge:
                  description: >
                    Used in PKCE extension to Authorization Code flow. A base64
                    URL encoded string derived from

                    the code verifier using one of the allowed transformation methods.
                  type: string
                code_challenge_method:
                  description: >
                    Used in PKCE extension to Authorization Code flow.
                    Transformation method used to derive code

                    challenge from the code verifier. The value can only be either 'S256' or 'plain'.
                  type: string
      responses:
        "302":
          headers:
            Location:
              description: |
                The URL that the Resource Owner must be redirected to.
                This will be the login page or an error page if a parameter
                was omitted or incorrect
              schema:
                type: string
          description: Redirection to login page successful.
        "400":
          description: Request is invalid. One or more required parameters may have been
            omitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: client_id not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - OpenID Connect
  /token:
    post:
      summary: Request Access Token
      operationId: _access_token
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters described below
      parameters:
        - $ref: "#/components/parameters/authorization"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  description: The OAuth2 Grant Type
                  type: string
                refresh_token:
                  description: |
                    A previously issued, still valid refresh_token
                    required when grant_type=refresh_token
                  type: string
                code:
                  description: |
                    OAuth2 code returned by the /authorize call.
                    Required when grant_type=authorization_code
                  type: string
                redirect_uri:
                  description: >
                    URI to redirect the user to after successful authentication.
                    This URL

                    must match one of the registered URLs for the OAuth2 application linked to the service

                    initiating the authentication flow.
                  type: string
                client_id:
                  description: OAuth2 client id of the service initiating the OAuth2 flow.
                  type: string
                client_secret:
                  description: OAuth2 client sercret of the service initiating the OAuth2
                    flow.
                  type: string
                scope:
                  description: The required scopes for the access token
                  type: string
                username:
                  description: The username of the user for implicit grant_type of Password
                  type: string
                password:
                  description: The password of the user for implicit grant_type of Password
                  type: string
                code_verifier:
                  description: >
                    Used in PKCE extension to Authorization Code flow. A base64
                    url encoded random string with

                    a minimum length of 43 characters and a maximum length of 128 characters.
                  type: string
              required:
                - grant_type
      tags:
        - OpenID Connect
      responses:
        "200":
          description: Authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: One or more required parameters are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Username/Client_id password combination not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: client_id was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /userinfo:
    get:
      summary: Request Info For User of the Authorization token
      operationId: _user_info
      description: |
        Partner makes a request to the userinfo endpoint by adding the
        following parameters describerd below
      parameters:
        - $ref: "#/components/parameters/authorization"
        - name: claims
          in: query
          required: false
          schema:
            type: string
      tags:
        - OpenID Connect
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "401":
          description: The supplied authorization is invalid or has expired.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Request Info For User of the Authorization token
      operationId: _user_info_post
      description: |
        Partner makes a request to the userinfo endpoint by adding the
        following parameters describerd below
      parameters:
        - $ref: "#/components/parameters/authorization"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                claims:
                  type: string
      tags:
        - OpenID Connect
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "401":
          description: The supplied authorization is invalid or has expired.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /.well-known/openid-configuration:
    get:
      summary: Well Known OpenID Config
      operationId: _well_known_openid_configuration
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WellKnownConfig"
      tags:
        - OpenID Connect
      description: Returns information required for OIDC Discovery
  /endSession:
    get:
      summary: OpenID Connect End Session
      operationId: _end_session
      parameters:
        - name: id_token_hint
          in: query
          required: false
          description: Users id token to help OP link the session
          schema:
            type: string
        - name: post_logout_redirect_uri
          in: query
          required: false
          description: Optional uri to redirect the user to after logout
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Optional application state parameter
          schema:
            type: string
      responses:
        "204":
          description: Success
        "302":
          headers:
            Location:
              description: >
                The URL that the Resource Owner must be redirected to.

                This is a pre-registered post logout URI that must match the client_id

                of the audience of the id_token passed in as a hint.
              schema:
                type: string
          description: End Session success. Redirecting to post logout URI
        "400":
          description: One or more parameters are invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - OpenID Connect
      description: Ends the session of the user
servers:
  - url: /o
components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: false
      schema:
        type: string
  schemas:
    WellKnownConfig:
      type: object
      title: OpenID Connect Well-Known Configuration Reponse
      properties:
        request_parameter_supported:
          type: boolean
          default: false
          example: true
        claims_parameter_supported:
          type: boolean
          default: false
          example: false
        introspection_endpoint:
          type: string
          example: http://localhost:8080/o/introspect
          pattern: ^(.*)$
        check_session_iframe:
          type: string
          example: http://localhost:8080/o/checkSession
        scopes_supported:
          type: array
          items:
            type: string
            example: acr openid profile roles authorities email
        issuer:
          type: string
          example: http://localhost:8080/o/
        id_token_encryption_enc_values_supported:
          type: array
          items:
            type: string
            example: A256GCM A192GCM A128GCM A128CBC-HS256 A192CBC-HS384 A256CBC-HS512
        acr_values_supported:
          type: array
          items:
            type: string
        authorization_endpoint:
          type: string
          example: http://localhost:8080/o/authorize
        request_object_encryption_enc_values_supported:
          type: array
          items:
            type: string
            example: A256GCM A192GCM A128GCM A128CBC-HS256 A192CBC-HS384 A256CBC-HS512
        rcs_request_encryption_alg_values_supported:
          type: array
          items:
            type: string
            example: RSA-OAEP RSA-OAEP-256 A128KW RSA1_5 A256KW A192KW
        claims_supported:
          type: array
          items:
            type: string
        rcs_request_signing_alg_values_supported:
          type: array
          items:
            type: string
            example: ES384 HS256 HS512 ES256 RS256 HS384 ES512
        token_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
            example: client_secret_post private_key_jwt client_secret_basic
        token_endpoint:
          type: string
          example: http://localhost:8080/o/access_token
        response_types_supported:
          type: array
          items:
            type: string
            example: code token id_token
        request_uri_parameter_supported:
          type: boolean
          default: false
          example: true
        rcs_response_encryption_enc_values_supported:
          type: array
          items:
            type: string
            example: A256GCM A192GCM A128GCM A128CBC-HS256 A192CBC-HS384 A256CBC-HS512
        end_session_endpoint:
          type: string
          default: ""
          example: http://localhost:8080/o/endSession
        rcs_request_encryption_enc_values_supported:
          type: array
          items:
            type: string
            example: A256GCM A192GCM A128GCM A128CBC-HS256 A192CBC-HS384 A256CBC-HS512
        version:
          type: string
          example: "3.0"
        rcs_response_encryption_alg_values_supported:
          type: array
          items:
            type: string
            example: RSA-OAEP RSA-OAEP-256 A128KW A256KW RSA1_5 A192KW
        userinfo_endpoint:
          type: string
          example: http://localhost:8080/o/userinfo
        id_token_encryption_alg_values_supported:
          type: array
          items:
            type: string
            example: RSA-OAEP RSA-OAEP-256 A128KW A256KW RSA1_5 A192KW
        jwks_uri:
          type: string
          example: http://localhost:8080/o/jwk_uri
        subject_types_supported:
          type: array
          items:
            type: string
            example: public
        id_token_signing_alg_values_supported:
          type: array
          items:
            type: string
            example: ES384 HS256 HS512 ES256 RS256 HS384 ES512
        registration_endpoint:
          type: string
          example: http://localhost:8080/o/register
        request_object_signing_alg_values_supported:
          type: array
          items:
            type: string
            example: ES384 HS256 HS512 ES256 RS256 HS384 ES512
        request_object_encryption_alg_values_supported:
          type: array
          items:
            type: string
            example: RSA-OAEP RSA-OAEP-256 A128KW RSA1_5 A256KW A192KW
        rcs_response_signing_alg_values_supported:
          type: array
          items:
            type: string
            example: ES384 HS256 HS512 ES256 RS256 HS384 ES512
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: A one word error code
        error_description:
          type: string
          description: Human-readable ASCII encoded text description of the error
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The access token
        refresh_token:
          type: string
          description: The refresh token
        scope:
          type: string
          description: The scopes of the token
        id_token:
          type: string
          description: The ID Token
        token_type:
          type: string
          description: The type of token eg "Bearer"
        expires_in:
          type: string
          description: The lifetime in seconds of the access token