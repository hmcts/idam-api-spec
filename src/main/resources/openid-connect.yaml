swagger: '2.0'
info:
  title: SIDAM OpenID Connect 1.0 Endpoints
  description: Endpoints defined in the OIDC/OAuth2 Specification
  version: '1.0.0'
schemes:
  - http
  - https
tags:
  - name: OpenID Connect
produces:
  - application/json
basePath: /o
paths:
  /authenticate:
    post:
      summary: 'Authenticate Username and Password'
      operationId: _authenticate
      description: Returns a cookie reference to either a new or existing session
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: username
          in: formData
          description: The user's username
          required: true
          type: string
        - name: password
          in: formData
          description: The user's password
          required: true
          type: string
      responses:
        200:
          headers:
            Set-Cookie:
              type: string
              description: |
                A Set-Cookie instruction containing the cookie referencing the users
                newly created or pre-existing session.
          description: Authentication is successful.
        401:
          description: Username password combination not found

  /authorize:
    get:
      summary: 'Browser OpenID Connect Authorize'
      operationId: _oauth2_authorize
      description: Initiate an OpenID Connect Authorization flow
      parameters:
        - name: client_id
          in: query
          required: false
          description: OAuth2 client id of the service initiating the OAuth2 flow.
          type: string
        - name: redirect_uri
          in: query
          required: false
          description: |
            URI to redirect the user to after successful authentication. This URL
            must match one of the registered URLs for the OAuth2 application linked to the service
            initiating the authentication flow.
          type: string
        - name: state
          in: query
          required: false
          description: Optional state to be sent back to the initiating service after successful authentication.
          type: string
        - name: nonce
          in: query
          required: false
          description: Optional parameter required for openid hybrid flow requests.
          type: string
        - name: response_type
          in: query
          required: false
          description: Response type to use for this request
          type: string
          default: code
        - name: scope
          in: query
          required: false
          description: Optional scopes to request.
          type: string
        - name: response_mode
          in: query
          required: false
          description: |
            Informs Authorization server of the mechanism to be used for returning parameters.
            Use is not recommended.
          type: string
        - name: display
          in: query
          required: false
          description: |
            ASCII string value that specifies how the Authorization Server
            displays the authentication and consent user interface pages to the End-User.
          type: string
        - name: prompt
          in: query
          required: false
          description: |
            Space delimited, case sensitive list of ASCII string values that specifies whether
            the Authorization Server prompts the End-User for reauthentication and consent.
          type: string
        - name: max_age
          in: query
          required: false
          description: Maximum Authentication Age
          type: string
        - name: acr_values
          in: query
          required: false
          description: Requested Authentication Context Class Reference values
          type: string
        - name: id_token_hint
          in: query
          required: false
          description: |
            Token previously issued by the Authorization Server being passed as a hint about
            the End-User's current or past authenticated session with the Client.
          type: string
        - name: login_hint
          in: query
          required: false
          description: |
            Hint to the Authorization Server about the login identifier the End-User might use to
            log in (if necessary). This hint can be used by an RP if it first asks the End-User for
            their e-mail address (or other identifier) and then wants to pass that value as a hint
            to the discovered authorization service.
          type: string
      responses:
        302:
          headers:
            Location:
              type: string
              description: |
                The URL that the Resource Owner must be redirected to.
                This will be the login page or an error page if a parameter
                was omitted or incorrect
          description: Redirection to login page successful.
        400:
          description: Request is invalid. One or more required parameters may have been omitted
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: client_id not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      tags:
        - OpenID Connect
    post:
      summary: 'Direct Post OpenID Connect Authorize'
      operationId: _oauth2_authorize_post
      description: Initiate an OpenID Connect Authorization flow
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: client_id
          in: formData
          required: false
          description: OAuth2 client id of the service initiating the OAuth2 flow.
          type: string
        - name: redirect_uri
          in: formData
          required: false
          description: |
            URI to redirect the user to after successful authentication. This URL
            must match one of the registered URLs for the OAuth2 application linked to the service
            initiating the authentication flow.
          type: string
        - name: state
          in: formData
          required: false
          description: Optional state to be sent back to the initiating service after successful authentication.
          type: string
        - name: nonce
          in: formData
          required: false
          description: Optional parameter required for openid hybrid flow requests.
          type: string
        - name: response_type
          in: formData
          required: false
          description: Response type to use for this request
          type: string
          default: code
        - name: scope
          in: formData
          required: false
          description: Optional scopes to request.
          type: string
        - name: response_mode
          in: formData
          required: false
          description: |
            Informs Authorization server of the mechanism to be used for returning parameters.
            Use is not recommended.
          type: string
        - name: display
          in: formData
          required: false
          description: |
            ASCII string value that specifies how the Authorization Server
            displays the authentication and consent user interface pages to the End-User.
          type: string
        - name: prompt
          in: formData
          required: false
          description: |
            Space delimited, case sensitive list of ASCII string values that specifies whether
            the Authorization Server prompts the End-User for reauthentication and consent.
          type: string
        - name: max_age
          in: formData
          required: false
          description: Maximum Authentication Age
          type: string
        - name: acr_values
          in: formData
          required: false
          description: Requested Authentication Context Class Reference values
          type: string
        - name: id_token_hint
          in: formData
          required: false
          description: |
            Token previously issued by the Authorization Server being passed as a hint about
            the End-User's current or past authenticated session with the Client.
          type: string
        - name: login_hint
          in: formData
          required: false
          description: |
            Hint to the Authorization Server about the login identifier the End-User might use to
            log in (if necessary). This hint can be used by an RP if it first asks the End-User for
            their e-mail address (or other identifier) and then wants to pass that value as a hint
            to the discovered authorization service.
          type: string
      responses:
        302:
          headers:
            Location:
              type: string
              description: |
                The URL that the Resource Owner must be redirected to.
                This will be the login page or an error page if a parameter
                was omitted or incorrect
          description: Redirection to login page successful.
        400:
          description: Request is invalid. One or more required parameters may have been omitted
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: client_id not found
          schema:
            $ref: '#/definitions/ErrorResponse'
      tags:
        - OpenID Connect

  /token:
    post:
      summary: Request Access Token
      operationId: _access_token
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters described below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - name: grant_type
          in: formData
          description: The OAuth2 Grant Type
          required: true
          type: string
        - name: refresh_token
          in: formData
          description: |
            A previously issued, still valid refresh_token
            required when grant_type=refresh_token
          required: false
          type: string
        - name: code
          in: formData
          description: |
            OAuth2 code returned by the /authorize call.
            Required when grant_type=authorization_code
          required: false
          type: string
        - name: redirect_uri
          in: formData
          description: |
            URI to redirect the user to after successful authentication. This URL
            must match one of the registered URLs for the OAuth2 application linked to the service
            initiating the authentication flow.
          required: false
          type: string
        - name: client_id
          in: formData
          description: OAuth2 client id of the service initiating the OAuth2 flow.
          required: false
          type: string
        - name: client_secret
          in: formData
          description: OAuth2 client sercret of the service initiating the OAuth2 flow.
          required: false
          type: string
        - name: scope
          in: formData
          description: The required scopes for the access token
          required: false
          type: string
        - name: username
          in: formData
          description: The username of the user for implicit grant_type of Password
          required: false
          type: string
        - name: password
          in: formData
          description: The password of the user for implicit grant_type of Password
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        200:
          description: Authorization token
          schema:
            $ref: '#/definitions/TokenResponse'
        400:
          description: One or more required parameters are invalid
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Username/Client_id password combination not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: client_id was not found
          schema:
            $ref: '#/definitions/ErrorResponse'

  /userinfo:
    get:
      summary: Request Info For User of the Authorization token
      operationId: _user_info
      description: |
        Partner makes a request to the userinfo endpoint by adding the
        following parameters describerd below
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - name: claims
          in: query
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        '200':
          description: Success
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: The supplied authorization is invalid or has expired.
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      summary: Request Info For User of the Authorization token
      operationId: _user_info_post
      description: |
        Partner makes a request to the userinfo endpoint by adding the
        following parameters describerd below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - name: claims
          in: formData
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        '200':
          description: Success
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: The supplied authorization is invalid or has expired.
          schema:
            $ref: '#/definitions/ErrorResponse'

  /.well-known/openid-configuration:
    get:
      summary: 'Well Known OpenID Config'
      operationId: _well_known_openid_configuration
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/WellKnownConfig'
      tags:
        - OpenID Connect
      description: Returns information required for OIDC Discovery

  /endSession:
    get:
      summary: 'OpenID Connect End Session'
      operationId: _end_session
      parameters:
        - name: id_token_hint
          in: query
          required: false
          description: Users id token to help OP link the session
          type: string
        - name: post_logout_redirect_uri
          in: query
          required: false
          description: Optional uri to redirect the user to after logout
          type: string
        - name: state
          in: query
          required: false
          description: Optional application state parameter
          type: string
      responses:
        204:
          description: Success
        302:
          headers:
            Location:
              type: string
              description: |
                The URL that the Resource Owner must be redirected to.
                This is a pre-registered post logout URI that must match the client_id
                of the audience of the id_token passed in as a hint.
          description: End Session success. Redirecting to post logout URI
        400:
          description: One or more parameters are invalid
          schema:
            $ref: '#/definitions/ErrorResponse'
      tags:
        - OpenID Connect
      description: Ends the session of the user

definitions:
  WellKnownConfig:
    type: object
    title: OpenID Connect Well-Known Configuration Reponse
    properties:
      request_parameter_supported:
        type: boolean
        default: false
        examples:
          - true
      claims_parameter_supported:
        type: boolean
        default: false
        examples:
          - false
      introspection_endpoint:
        type: string
        examples:
          - http://localhost:8080/o/introspect
        pattern: "^(.*)$"
      check_session_iframe:
        type: string
        examples:
          - http://localhost:8080/o/checkSession
      scopes_supported:
        type: array
        items:
          type: string
          examples:
            - acr
            - openid
            - profile
            - roles
            - authorities
            - email
      issuer:
        type: string
        examples:
          - http://localhost:8080/o/
      id_token_encryption_enc_values_supported:
        type: array
        items:
          type: string
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
      acr_values_supported:
        type: array
        items:
          type: string
      authorization_endpoint:
        type: string
        examples:
          - http://localhost:8080/o/authorize
      request_object_encryption_enc_values_supported:
        type: array
        items:
          type: string
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
      rcs_request_encryption_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - RSA1_5
            - A256KW
            - dir
            - A192KW
      claims_supported:
        type: array
        items:
          type: string
      rcs_request_signing_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
      token_endpoint_auth_methods_supported:
        type: array
        items:
          type: string
          examples:
            - client_secret_post
            - private_key_jwt
            - client_secret_basic
      token_endpoint:
        type: string
        examples:
          - http://localhost:8080/o/access_token
      response_types_supported:
        type: array
        items:
          type: string
          examples:
            - code token id_token
            - code
            - code id_token
            - device_code
            - id_token
            - code token
            - token
            - token id_token
      request_uri_parameter_supported:
        type: boolean
        default: false
        examples:
          - true
      rcs_response_encryption_enc_values_supported:
        type: array
        items:
          type: string
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
      end_session_endpoint:
        type: string
        default: ''
        examples:
          - http://localhost:8080/o/endSession
      rcs_request_encryption_enc_values_supported:
        type: array
        items:
          type: string
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
      version:
        type: string
        examples:
          - '3.0'
      rcs_response_encryption_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - A256KW
            - RSA1_5
            - dir
            - A192KW
      userinfo_endpoint:
        type: string
        examples:
          - http://localhost:8080/o/userinfo
      id_token_encryption_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - A256KW
            - RSA1_5
            - dir
            - A192KW
      jwks_uri:
        type: string
        examples:
          - http://localhost:8080/o/jwk_uri
      subject_types_supported:
        type: array
        items:
          type: string
          examples:
            - public
      id_token_signing_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
      registration_endpoint:
        type: string
        examples:
          - http://localhost:8080/o/register
      request_object_signing_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
      request_object_encryption_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - RSA1_5
            - A256KW
            - dir
            - A192KW
      rcs_response_signing_alg_values_supported:
        type: array
        items:
          type: string
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512

  ErrorResponse:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        description: A one word error code
      error_description:
        type: string
        description: Human-readable ASCII encoded text description of the error

  TokenResponse:
    type: object
    properties:
      access_token:
        type: string
        description: The access token
      refresh_token:
        type: string
        description: The refresh token
      scope:
        type: string
        description: The scopes of the token
      id_token:
        type: string
        description: The ID Token
      token_type:
        type: string
        description: The type of token eg "Bearer"
      expires_in:
        type: string
        description: The lifetime in seconds of the access token

parameters:
  authorization:
    name: Authorization
    in: header
    required: false
    type: string